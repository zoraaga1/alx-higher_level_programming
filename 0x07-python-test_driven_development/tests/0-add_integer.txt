# This is a test case for add_integer
>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(2, 3)
5
>>> add_integer(2.1, 3)
5
>>> add_integer(2, 3.5)
5
>>> add_integer(2.1, 3.5)
5
>>> add_integer("school", 3)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
>>> add_integer(2, "3")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

>>> add_integer(3)
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 1 required positional argument: 'b'

# Test case: Missing two arguments
>>> add_integer()
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'

>>> add_integer(1e1000, 2)
Traceback (most recent call last):
    ...
OverflowError: float too large to convert to int

>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[1, 2], [3, 4]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'